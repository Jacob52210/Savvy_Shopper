{"version":3,"sources":["components/greeting/greeting.jsx","components/calculator/calc.jsx","components/shopping_list/shopping.jsx","components/recipe/recipe2.jsx","components/recipe/recipe.jsx","components/todo_list/todo.jsx","components/nav_links/nav.jsx","serviceWorker.js","index.js"],"names":["yourName","localStorage","getItem","setItem","prompt","setName","daysInWeek","monthsInYear","App","theme","timeOfDay","useState","Date","date","setDate","hours","getHours","rightNow","toLocaleTimeString","dayOfWeek","getDay","month","getMonth","dayOfMonth","getDate","today","thisMonth","useEffect","setInterval","i","clearInterval","className","Calc","Shopping","Recipes","title","calories","image","ingredients","Math","round","src","alt","map","ingredient","index","key","text","require","config","Recipe","recipes","setRecipes","search","setSearch","query","setQuery","getRecipes","a","fetch","response","json","data","hits","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","recipe","label","Todo","Nav","React","page","setPage","onClick","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.630e5602.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './greeting.scss';\r\n\r\nfunction setName() {\r\n\tlet yourName = localStorage.getItem('userName');\r\n\tif (yourName === null) {\r\n\t\treturn (yourName = localStorage.setItem('userName', prompt('Enter Your Name:')));\r\n\t}\r\n}\r\n\r\nsetName();\r\n\r\nconst daysInWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\nconst monthsInYear = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n\r\nfunction App() {\r\n\tconst [date, setDate] = useState(new Date());\r\n\t//\tconst [intervalTimeout, setIntervalTimeout] = useState(null);\r\n\tconst hours = date.getHours();\r\n\tconst rightNow = date.toLocaleTimeString();\r\n\tconst dayOfWeek = date.getDay();\r\n\tconst month = date.getMonth();\r\n\tconst dayOfMonth = date.getDate();\r\n\r\n\tlet theme;\r\n\tlet timeOfDay;\r\n\tlet today = daysInWeek[dayOfWeek];\r\n\tlet thisMonth = monthsInYear[month];\r\n\r\n\tif (hours >= 5 && hours < 11) {\r\n\t\ttimeOfDay = 'Good Morning, ';\r\n\t\ttheme = 'greeting morning';\r\n\t} else if (hours >= 11 && hours < 17) {\r\n\t\ttimeOfDay = 'Good Afternoon, ';\r\n\t\ttheme = 'greeting afternoon';\r\n\t} else if (hours >= 17 && hours < 24) {\r\n\t\ttimeOfDay = 'Good Evening, ';\r\n\t\ttheme = 'greeting night';\r\n\t} else {\r\n\t\ttimeOfDay = 'Good Morning, ';\r\n\t\ttheme = 'greeting night';\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetInterval(() => {\r\n\t\t\tsetDate(new Date());\r\n\t\t}, 1000);\r\n\r\n\t\tfunction cleanup() {\r\n\t\t\tfor (let i = 0; i < 10000; ++i) {\r\n\t\t\t\tclearInterval(i);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn cleanup;\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className={theme}>\r\n\t\t\t<div className='date-time'>\r\n\t\t\t\t<h2>{rightNow}</h2>\r\n\t\t\t\t<h2>{today + ', ' + thisMonth + ' ' + dayOfMonth}</h2>\r\n\t\t\t</div>\r\n\t\t\t<h1>{timeOfDay + localStorage.getItem('userName') + '!'}</h1>\r\n\t\t\t<h5 className='recipes'>Recipes</h5>\r\n\t\t\t<h5 className='calc'>Calculator</h5>\r\n\t\t\t<h5 className='todo'>Todo List</h5>\r\n\t\t\t<h5 className='shopping'>Shopping List</h5>\r\n\t\t\t<h5 className='home'>Home</h5>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nimport './calc.scss';\r\n\r\nfunction Calc() {\r\n\treturn (\r\n\t\t<div className='calc'>\r\n\t\t\t<h1>Hello from calc.jsx</h1>\r\n\t\t\t<footer></footer>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Calc;\r\n","import React from 'react';\r\n\r\nimport './shopping.scss';\r\n\r\nfunction Shopping() {\r\n\treturn (\r\n\t\t<div className='shopping'>\r\n\t\t\t<h1>Hello from shopping.jsx</h1>\r\n\t\t\t<footer></footer>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Shopping;\r\n","import React from 'react';\r\nimport './recipe.scss';\r\n\r\nconst Recipes = ({ title, calories, image, ingredients }) => {\r\n\treturn (\r\n\t\t<div className='cards'>\r\n\t\t\t<h2>{title}</h2>\r\n\t\t\t<p>{Math.round(calories)} Calories</p>\r\n\t\t\t<img className='food-pics' src={image} alt={title} />\r\n\t\t\t<ul>\r\n\t\t\t\t{ingredients.map((ingredient, index) => (\r\n\t\t\t\t\t<li key={index}>{ingredient.text}</li>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Recipes;\r\n\r\n// This Recipe Search API was inspired by Dev Ed. YouTube address: https://www.youtube.com/watch?v=U9T6YkEDkMo&t=1519s\r\n","import React, { useState, useEffect } from 'react';\r\nimport Recipes from './recipe2';\r\nimport './recipe.scss';\r\nrequire('dotenv').config();\r\n\r\nconst Recipe = () => {\r\n\tconst API_ID = 'd843d4c8';\r\n\tconst API_KEY = '2e30a51ebccb2f3115c10140b3e38ea0';\r\n\r\n\tconst [recipes, setRecipes] = useState([]);\r\n\tconst [search, setSearch] = useState('');\r\n\tconst [query, setQuery] = useState('Julia');\r\n\r\n\tuseEffect(() => {\r\n\t\tgetRecipes();\r\n\t}, [query]);\r\n\r\n\tconst getRecipes = async () => {\r\n\t\tconst response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${API_ID}&app_key=${API_KEY}&to=20`);\r\n\t\tconst data = await response.json();\r\n\r\n\t\tsetRecipes(data.hits);\r\n\t};\r\n\r\n\tconst updateSearch = (e) => {\r\n\t\tsetSearch(e.target.value);\r\n\t};\r\n\r\n\tconst getSearch = (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetQuery(search);\r\n\t\tsetSearch('');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='Recipe'>\r\n\t\t\t<h1>Recipe Search</h1>\r\n\t\t\t<form onSubmit={getSearch} className='search-form'>\r\n\t\t\t\t<input className='search-bar' type='text' value={search} onChange={updateSearch} placeholder='Search' />\r\n\t\t\t\t<button className='search-btn' type='submit'>\r\n\t\t\t\t\t<i className='fas fa-search'></i>\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t\t<p>Please limit searches to no more than 5 per minute.</p>\r\n\t\t\t<div className='search-results'>\r\n\t\t\t\t{recipes.map((recipe) => (\r\n\t\t\t\t\t<Recipes\r\n\t\t\t\t\t\tkey={recipe.recipe.image}\r\n\t\t\t\t\t\ttitle={recipe.recipe.label}\r\n\t\t\t\t\t\tcalories={recipe.recipe.calories}\r\n\t\t\t\t\t\timage={recipe.recipe.image}\r\n\t\t\t\t\t\tingredients={recipe.recipe.ingredients}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t<footer></footer>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Recipe;\r\n\r\n// This Recipe Search API was inspired by Dev Ed. YouTube address: https://www.youtube.com/watch?v=U9T6YkEDkMo&t=1519s\r\n","import React from 'react';\r\n\r\nimport './todo.scss';\r\n\r\nfunction Todo() {\r\n\treturn (\r\n\t\t<div className='todo'>\r\n\t\t\t<h1>Hello from todo.jsx</h1>\r\n\t\t\t<footer></footer>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Todo;\r\n","import React from 'react';\r\nimport Greeting from '../greeting/greeting';\r\nimport './nav.scss';\r\nimport Calc from '../calculator/calc';\r\nimport Shopping from '../shopping_list/shopping';\r\nimport Recipe from '../recipe/recipe';\r\nimport Todo from '../todo_list/todo';\r\n\r\nfunction Nav() {\r\n\tconst [page, setPage] = React.useState('Greeting');\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{page === 'Recipe' ? (\r\n\t\t\t\t<Recipe />\r\n\t\t\t) : page === 'Calc' ? (\r\n\t\t\t\t<Calc />\r\n\t\t\t) : page === 'Todo' ? (\r\n\t\t\t\t<Todo />\r\n\t\t\t) : page === 'Shopping' ? (\r\n\t\t\t\t<Shopping />\r\n\t\t\t) : (\r\n\t\t\t\t<Greeting />\r\n\t\t\t)}\r\n\t\t\t<div className='nav'>\r\n\t\t\t\t<i onClick={() => setPage('Recipe')} className='fas fa-utensils fa-2x'></i>\r\n\t\t\t\t<i onClick={() => setPage('Calc')} className='fas fa-calculator fa-2x'></i>\r\n\t\t\t\t<i onClick={() => setPage('Todo')} className='fas fa-list fa-2x'></i>\r\n\t\t\t\t<i onClick={() => setPage('Shopping')} className='fas fa-shopping-cart fa-2x'></i>\r\n\t\t\t\t<i onClick={() => setPage('Greeting')} className='fas fa-home fa-4x'></i>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n/*\r\nfunction Nav() {\r\n\tconst [page, setPage] = React.useState(<Greeting />);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{page}\r\n\t\t\t<div className='nav'>\r\n\t\t\t\t<i onClick={() => setPage(<Recipe />)} className='fas fa-utensils fa-2x'></i>\r\n\t\t\t\t<i onClick={() => setPage(<Calc />)} className='fas fa-calculator fa-2x'></i>\r\n\t\t\t\t<i onClick={() => setPage(<Todo />)} className='fas fa-list fa-2x'></i>\r\n\t\t\t\t<i onClick={() => setPage(<Shopping />)} className='fas fa-shopping-cart fa-2x'></i>\r\n\t\t\t\t<i onClick={() => setPage(<Greeting />)} className='fas fa-home fa-4x'></i>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n*/\r\n\r\nexport default Nav;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport Nav from './components/nav_links/nav';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Nav />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}