{"version":3,"sources":["App.js","components/calculator/calc.jsx","components/greeting/greeting.jsx","components/nav_links/nav.jsx","components/recipe/recipe.jsx","components/shopping_list/shopping.jsx","components/todo_list/todo.jsx","serviceWorker.js","index.js"],"names":["App","className","Calc","yourName","localStorage","getItem","setItem","prompt","setName","daysInWeek","monthsInYear","theme","timeOfDay","date","Date","hours","getHours","rightNow","toLocaleTimeString","dayOfWeek","getDay","month","getMonth","dayOfMonth","getDate","today","thisMonth","Nav","onClick","e","preventDefault","alert","Recipe","Shopping","Todo","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+VAWeA,MARf,WACC,OACC,yBAAKC,UAAU,OACd,mD,MCMYC,MARf,WACC,OACC,yBAAKD,UAAU,QACd,qD,OCHH,WACC,IAAIE,EAAWC,aAAaC,QAAQ,YAEpC,GAAiB,OAAbF,EACgBC,aAAaE,QAAQ,WAAYC,OAAO,qBAI7DC,GAEA,IAAMC,EAAa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACxDC,EAAe,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAEnG,SAASV,IACR,IAOIW,EACAC,EAREC,EAAO,IAAIC,KACXC,EAAQF,EAAKG,WACbC,EAAWJ,EAAKK,qBAChBC,EAAYN,EAAKO,SACjBC,EAAQR,EAAKS,WACbC,EAAaV,EAAKW,UAIpBC,EAAQhB,EAAWU,GACnBO,EAAYhB,EAAaW,GAa7B,OAXIN,EAAQ,IACXH,EAAY,iBACZD,EAAQ,oBACEI,GAAS,IAAMA,EAAQ,IACjCH,EAAY,mBACZD,EAAQ,uBAERC,EAAY,iBACZD,EAAQ,kBAIR,yBAAKV,UAAWU,GACf,yBAAKV,UAAU,aACd,4BAAKgB,GACL,4BAAKQ,EAAQ,KAAOC,EAAY,IAAMH,IAEvC,4BAAKX,EAAYR,aAAaC,QAAQ,YAAc,MASxCL,Q,MCnBA2B,MAjCf,WAsBC,OACC,yBAAK1B,UAAU,OACd,uBAAG2B,QAvBL,SAAgBC,GACfA,EAAEC,iBACFC,MAAM,kBAqBe9B,UAAU,0BAC9B,uBAAG2B,QApBL,SAAcC,GACbA,EAAEC,iBACFC,MAAM,mBAkBa9B,UAAU,4BAC5B,uBAAG2B,QAjBL,SAAcC,GACbA,EAAEC,iBACFC,MAAM,cAea9B,UAAU,sBAC5B,uBAAG2B,QAdL,SAAcC,GACbA,EAAEC,iBACFC,MAAM,kBAYa9B,UAAU,+BAC5B,uBAAG2B,QAXL,SAAcC,GACbA,EAAEC,iBACFC,MAAM,cASa9B,UAAU,wB,MCpBhB+B,MARf,WACC,OACC,yBAAK/B,UAAU,UACd,uD,MCKYgC,MARf,WACC,OACC,yBAAKhC,UAAU,YACd,yD,MCKYiC,MARf,WACC,OACC,yBAAKjC,UAAU,QACd,qDCKiBkC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCNNC,IAASC,OACR,kBAAC,IAAMC,WAAP,KACC,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEDC,SAASC,eAAe,SD6GnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1f99949b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.scss';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<h1>Hello from App.js</h1>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nimport './calc.scss';\r\n\r\nfunction Calc() {\r\n\treturn (\r\n\t\t<div className=\"calc\">\r\n\t\t\t<h1>Hello from calc.jsx</h1>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Calc;\r\n","import React from 'react';\r\nimport './greeting.scss';\r\nimport { render } from 'react-dom';\r\n\r\nfunction setName() {\r\n\tlet yourName = localStorage.getItem('userName');\r\n\r\n\tif (yourName === null) {\r\n\t\treturn (yourName = localStorage.setItem('userName', prompt('Enter Your Name:')));\r\n\t}\r\n}\r\n\r\nsetName();\r\n\r\nconst daysInWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\nconst monthsInYear = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n\r\nfunction App() {\r\n\tconst date = new Date();\r\n\tconst hours = date.getHours();\r\n\tconst rightNow = date.toLocaleTimeString();\r\n\tconst dayOfWeek = date.getDay();\r\n\tconst month = date.getMonth();\r\n\tconst dayOfMonth = date.getDate();\r\n\r\n\tlet theme;\r\n\tlet timeOfDay;\r\n\tlet today = daysInWeek[dayOfWeek];\r\n\tlet thisMonth = monthsInYear[month];\r\n\r\n\tif (hours > 11) {\r\n\t\ttimeOfDay = 'Good Morning, ';\r\n\t\ttheme = 'greeting morning';\r\n\t} else if (hours >= 11 && hours < 17) {\r\n\t\ttimeOfDay = 'Good Afternoon, ';\r\n\t\ttheme = 'greeting afternoon';\r\n\t} else {\r\n\t\ttimeOfDay = 'Good Evening, ';\r\n\t\ttheme = 'greeting night';\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={theme}>\r\n\t\t\t<div className='date-time'>\r\n\t\t\t\t<h2>{rightNow}</h2>\r\n\t\t\t\t<h2>{today + ', ' + thisMonth + ' ' + dayOfMonth}</h2>\r\n\t\t\t</div>\r\n\t\t\t<h1>{timeOfDay + localStorage.getItem('userName') + '!'}</h1>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction Greeting() {\r\n\treturn setInterval(App, 1000);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nimport './nav.scss';\r\n\r\nfunction Nav() {\r\n\tfunction recipe(e) {\r\n\t\te.preventDefault();\r\n\t\talert('Recipe Search');\r\n\t}\r\n\tfunction calc(e) {\r\n\t\te.preventDefault();\r\n\t\talert('Calculator App');\r\n\t}\r\n\tfunction todo(e) {\r\n\t\te.preventDefault();\r\n\t\talert('Todo List');\r\n\t}\r\n\tfunction shop(e) {\r\n\t\te.preventDefault();\r\n\t\talert('Shopping List');\r\n\t}\r\n\tfunction home(e) {\r\n\t\te.preventDefault();\r\n\t\talert('Home Page');\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='nav'>\r\n\t\t\t<i onClick={recipe} className='fas fa-utensils fa-2x'></i>\r\n\t\t\t<i onClick={calc} className='fas fa-calculator fa-2x'></i>\r\n\t\t\t<i onClick={todo} className='fas fa-list fa-2x'></i>\r\n\t\t\t<i onClick={shop} className='fas fa-shopping-cart fa-2x'></i>\r\n\t\t\t<i onClick={home} className='fas fa-home fa-4x'></i>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\n\r\nimport './recipe.scss';\r\n\r\nfunction Recipe() {\r\n\treturn (\r\n\t\t<div className=\"recipe\">\r\n\t\t\t<h1>Hello from recipe.jsx</h1>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Recipe;\r\n","import React from 'react';\r\n\r\nimport './shopping.scss';\r\n\r\nfunction Shopping() {\r\n\treturn (\r\n\t\t<div className=\"shopping\">\r\n\t\t\t<h1>Hello from shopping.jsx</h1>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Shopping;\r\n","import React from 'react';\r\n\r\nimport './todo.scss';\r\n\r\nfunction Todo() {\r\n\treturn (\r\n\t\t<div className=\"todo\">\r\n\t\t\t<h1>Hello from todo.jsx</h1>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Todo;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport Calc from './components/calculator/calc';\r\nimport Greeting from './components/greeting/greeting';\r\nimport Nav from './components/nav_links/nav';\r\nimport Recipe from './components/recipe/recipe';\r\nimport Shopping from './components/shopping_list/shopping';\r\nimport Todo from './components/todo_list/todo';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Greeting />\r\n\t\t<Calc />\r\n\t\t<App />\r\n\t\t<Recipe />\r\n\t\t<Shopping />\r\n\t\t<Todo />\r\n\t\t<Nav />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}